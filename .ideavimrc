let mapleader=" "

set clipboard=unnamed,unnamedplus
set clipboard+=ideaput
set ideajoin
set visualbell

set incsearch              " Highlight while searching with / or ?.
set hlsearch               " Keep matches highlighted.
set smartcase
set ignorecase

set cursorline             " Find the current line quickly.
set wrapscan               " Searches wrap around end-of-file.
set nowrap
set showmode
set showcmd

set scrolloff=7          " Lines of context
set sidescrolloff=8      " Columns of context

set highlightedyank
set timeoutlen=5000         " increase the timeoutlen (default: 1000)

set number relativenumber  " relative line numbers

" keybindings
map <leader>ff <action>(GotoClass)
map <leader>/  <action>(FindInPath)
map <leader>fu <action>(FindUsages)
map <leader>fg <action>(Compare.LastVersion)
map <leader>fh <action>(CallHierarchy)
map <leader>k  <action>(ShowIntentionActions)
map <leader>s  <action>(FileStructurePopup)
map <leader>r  <action>(Refactorings.QuickListPopupAction)
map <leader>i  <action>(Generate)
map <leader>vv <action>(IntroduceVariable)
map <leader>ww <action>(SurroundWith)
map <leader>xx <action>(EvaluateExpression)

" buffer switch
map <silent> H gT<CR>
map <silent> L gt<CR>

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" cancel search on ESC
nnoremap <esc> <esc>:noh<cr>

map gc    :action CommentByLineComment<CR>
map qq    :action CloseContent<CR>
map <c-j> :action MoveLineDown<CR>
map <c-k> :action MoveLineUp<CR>
map <c-u> :action Forward<CR>
map <c-o> :action Back<CR>

nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gr :action RecentFiles<CR>

nnoremap ,u :action Rerun<CR>
nnoremap ,f :action RerunFailedTests<CR>
nnoremap ,b :action ToggleLineBreakpoint<CR>
nnoremap ,d :action ContextDebug<CR>
